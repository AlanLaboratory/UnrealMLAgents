// Copyright Â© 2025 Stephane Capponi and individual contributors. All Rights Reserved.

#pragma warning(disable : 4100 4127 4267 4324)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ueagents_envs/communicator_objects/training_analytics.proto

#include "ueagents_envs/communicator_objects/training_analytics.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace communicator_objects {
template <typename>
PROTOBUF_CONSTEXPR TrainingEnvironmentInitialized::TrainingEnvironmentInitialized(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mlagents_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.ueagents_envs_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.python_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.torch_version_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.torch_device_type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.run_options_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.num_envs_)*/ 0

  , /*decltype(_impl_.num_environment_parameters_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrainingEnvironmentInitializedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrainingEnvironmentInitializedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrainingEnvironmentInitializedDefaultTypeInternal() {}
  union {
    TrainingEnvironmentInitialized _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrainingEnvironmentInitializedDefaultTypeInternal _TrainingEnvironmentInitialized_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TrainingBehaviorInitialized::TrainingBehaviorInitialized(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.behavior_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.trainer_type_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.visual_encoder_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.config_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.extrinsic_reward_enabled_)*/ false

  , /*decltype(_impl_.gail_reward_enabled_)*/ false

  , /*decltype(_impl_.curiosity_reward_enabled_)*/ false

  , /*decltype(_impl_.rnd_reward_enabled_)*/ false

  , /*decltype(_impl_.num_network_layers_)*/ 0

  , /*decltype(_impl_.behavioral_cloning_enabled_)*/ false

  , /*decltype(_impl_.recurrent_enabled_)*/ false

  , /*decltype(_impl_.trainer_threaded_)*/ false

  , /*decltype(_impl_.self_play_enabled_)*/ false

  , /*decltype(_impl_.num_network_hidden_units_)*/ 0

  , /*decltype(_impl_.curriculum_enabled_)*/ false

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TrainingBehaviorInitializedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrainingBehaviorInitializedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrainingBehaviorInitializedDefaultTypeInternal() {}
  union {
    TrainingBehaviorInitialized _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrainingBehaviorInitializedDefaultTypeInternal _TrainingBehaviorInitialized_default_instance_;
}  // namespace communicator_objects
static ::_pb::Metadata file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto = nullptr;
const ::uint32_t TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.mlagents_version_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.ueagents_envs_version_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.python_version_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.torch_version_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.torch_device_type_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.num_envs_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.num_environment_parameters_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingEnvironmentInitialized, _impl_.run_options_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.behavior_name_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.trainer_type_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.extrinsic_reward_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.gail_reward_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.curiosity_reward_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.rnd_reward_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.behavioral_cloning_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.recurrent_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.visual_encoder_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.num_network_layers_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.num_network_hidden_units_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.trainer_threaded_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.self_play_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.curriculum_enabled_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::TrainingBehaviorInitialized, _impl_.config_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::communicator_objects::TrainingEnvironmentInitialized)},
        { 16, -1, -1, sizeof(::communicator_objects::TrainingBehaviorInitialized)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::communicator_objects::_TrainingEnvironmentInitialized_default_instance_._instance,
    &::communicator_objects::_TrainingBehaviorInitialized_default_instance_._instance,
};
const char descriptor_table_protodef_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n;ueagents_envs/communicator_objects/tra"
    "ining_analytics.proto\022\024communicator_obje"
    "cts\"\356\001\n\036TrainingEnvironmentInitialized\022\030"
    "\n\020mlagents_version\030\001 \001(\t\022\035\n\025mlagents_env"
    "s_version\030\002 \001(\t\022\026\n\016python_version\030\003 \001(\t\022"
    "\025\n\rtorch_version\030\004 \001(\t\022\031\n\021torch_device_t"
    "ype\030\005 \001(\t\022\020\n\010num_envs\030\006 \001(\005\022\"\n\032num_envir"
    "onment_parameters\030\007 \001(\005\022\023\n\013run_options\030\010"
    " \001(\t\"\275\003\n\033TrainingBehaviorInitialized\022\025\n\r"
    "behavior_name\030\001 \001(\t\022\024\n\014trainer_type\030\002 \001("
    "\t\022 \n\030extrinsic_reward_enabled\030\003 \001(\010\022\033\n\023g"
    "ail_reward_enabled\030\004 \001(\010\022 \n\030curiosity_re"
    "ward_enabled\030\005 \001(\010\022\032\n\022rnd_reward_enabled"
    "\030\006 \001(\010\022\"\n\032behavioral_cloning_enabled\030\007 \001"
    "(\010\022\031\n\021recurrent_enabled\030\010 \001(\010\022\026\n\016visual_"
    "encoder\030\t \001(\t\022\032\n\022num_network_layers\030\n \001("
    "\005\022 \n\030num_network_hidden_units\030\013 \001(\005\022\030\n\020t"
    "rainer_threaded\030\014 \001(\010\022\031\n\021self_play_enabl"
    "ed\030\r \001(\010\022\032\n\022curriculum_enabled\030\016 \001(\010\022\016\n\006"
    "config\030\017 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto = {
    false,
    false,
    780,
    descriptor_table_protodef_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto,
    "ueagents_envs/communicator_objects/training_analytics.proto",
    &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto::offsets,
    file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto,
    file_level_enum_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto,
    file_level_service_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_getter() {
  return &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto(&descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto);
namespace communicator_objects {
// ===================================================================

class TrainingEnvironmentInitialized::_Internal {
 public:
};

TrainingEnvironmentInitialized::TrainingEnvironmentInitialized(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:communicator_objects.TrainingEnvironmentInitialized)
}
TrainingEnvironmentInitialized::TrainingEnvironmentInitialized(const TrainingEnvironmentInitialized& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrainingEnvironmentInitialized* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mlagents_version_) {}

    , decltype(_impl_.ueagents_envs_version_) {}

    , decltype(_impl_.python_version_) {}

    , decltype(_impl_.torch_version_) {}

    , decltype(_impl_.torch_device_type_) {}

    , decltype(_impl_.run_options_) {}

    , decltype(_impl_.num_envs_) {}

    , decltype(_impl_.num_environment_parameters_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mlagents_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mlagents_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mlagents_version().empty()) {
    _this->_impl_.mlagents_version_.Set(from._internal_mlagents_version(), _this->GetArenaForAllocation());
  }
  _impl_.ueagents_envs_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ueagents_envs_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ueagents_envs_version().empty()) {
    _this->_impl_.ueagents_envs_version_.Set(from._internal_ueagents_envs_version(), _this->GetArenaForAllocation());
  }
  _impl_.python_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.python_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_python_version().empty()) {
    _this->_impl_.python_version_.Set(from._internal_python_version(), _this->GetArenaForAllocation());
  }
  _impl_.torch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.torch_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_torch_version().empty()) {
    _this->_impl_.torch_version_.Set(from._internal_torch_version(), _this->GetArenaForAllocation());
  }
  _impl_.torch_device_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.torch_device_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_torch_device_type().empty()) {
    _this->_impl_.torch_device_type_.Set(from._internal_torch_device_type(), _this->GetArenaForAllocation());
  }
  _impl_.run_options_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.run_options_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_run_options().empty()) {
    _this->_impl_.run_options_.Set(from._internal_run_options(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.num_envs_, &from._impl_.num_envs_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_environment_parameters_) -
    reinterpret_cast<char*>(&_impl_.num_envs_)) + sizeof(_impl_.num_environment_parameters_));
  // @@protoc_insertion_point(copy_constructor:communicator_objects.TrainingEnvironmentInitialized)
}

inline void TrainingEnvironmentInitialized::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.mlagents_version_) {}

    , decltype(_impl_.ueagents_envs_version_) {}

    , decltype(_impl_.python_version_) {}

    , decltype(_impl_.torch_version_) {}

    , decltype(_impl_.torch_device_type_) {}

    , decltype(_impl_.run_options_) {}

    , decltype(_impl_.num_envs_) { 0 }

    , decltype(_impl_.num_environment_parameters_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mlagents_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mlagents_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ueagents_envs_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ueagents_envs_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.python_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.python_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.torch_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.torch_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.torch_device_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.torch_device_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.run_options_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.run_options_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TrainingEnvironmentInitialized::~TrainingEnvironmentInitialized() {
  // @@protoc_insertion_point(destructor:communicator_objects.TrainingEnvironmentInitialized)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrainingEnvironmentInitialized::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mlagents_version_.Destroy();
  _impl_.ueagents_envs_version_.Destroy();
  _impl_.python_version_.Destroy();
  _impl_.torch_version_.Destroy();
  _impl_.torch_device_type_.Destroy();
  _impl_.run_options_.Destroy();
}

void TrainingEnvironmentInitialized::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrainingEnvironmentInitialized::Clear() {
// @@protoc_insertion_point(message_clear_start:communicator_objects.TrainingEnvironmentInitialized)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mlagents_version_.ClearToEmpty();
  _impl_.ueagents_envs_version_.ClearToEmpty();
  _impl_.python_version_.ClearToEmpty();
  _impl_.torch_version_.ClearToEmpty();
  _impl_.torch_device_type_.ClearToEmpty();
  _impl_.run_options_.ClearToEmpty();
  ::memset(&_impl_.num_envs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_environment_parameters_) -
      reinterpret_cast<char*>(&_impl_.num_envs_)) + sizeof(_impl_.num_environment_parameters_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainingEnvironmentInitialized::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string mlagents_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_mlagents_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.mlagents_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string ueagents_envs_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ueagents_envs_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.ueagents_envs_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string python_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_python_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.python_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string torch_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_torch_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.torch_version"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string torch_device_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_torch_device_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.torch_device_type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 num_envs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.num_envs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 num_environment_parameters = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.num_environment_parameters_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string run_options = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_run_options();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingEnvironmentInitialized.run_options"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* TrainingEnvironmentInitialized::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:communicator_objects.TrainingEnvironmentInitialized)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string mlagents_version = 1;
  if (!this->_internal_mlagents_version().empty()) {
    const std::string& _s = this->_internal_mlagents_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.mlagents_version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ueagents_envs_version = 2;
  if (!this->_internal_ueagents_envs_version().empty()) {
    const std::string& _s = this->_internal_ueagents_envs_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.ueagents_envs_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string python_version = 3;
  if (!this->_internal_python_version().empty()) {
    const std::string& _s = this->_internal_python_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.python_version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string torch_version = 4;
  if (!this->_internal_torch_version().empty()) {
    const std::string& _s = this->_internal_torch_version();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.torch_version");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string torch_device_type = 5;
  if (!this->_internal_torch_device_type().empty()) {
    const std::string& _s = this->_internal_torch_device_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.torch_device_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int32 num_envs = 6;
  if (this->_internal_num_envs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this->_internal_num_envs(), target);
  }

  // int32 num_environment_parameters = 7;
  if (this->_internal_num_environment_parameters() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        7, this->_internal_num_environment_parameters(), target);
  }

  // string run_options = 8;
  if (!this->_internal_run_options().empty()) {
    const std::string& _s = this->_internal_run_options();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingEnvironmentInitialized.run_options");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:communicator_objects.TrainingEnvironmentInitialized)
  return target;
}

::size_t TrainingEnvironmentInitialized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:communicator_objects.TrainingEnvironmentInitialized)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mlagents_version = 1;
  if (!this->_internal_mlagents_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_mlagents_version());
  }

  // string ueagents_envs_version = 2;
  if (!this->_internal_ueagents_envs_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_ueagents_envs_version());
  }

  // string python_version = 3;
  if (!this->_internal_python_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_python_version());
  }

  // string torch_version = 4;
  if (!this->_internal_torch_version().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_torch_version());
  }

  // string torch_device_type = 5;
  if (!this->_internal_torch_device_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_torch_device_type());
  }

  // string run_options = 8;
  if (!this->_internal_run_options().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_run_options());
  }

  // int32 num_envs = 6;
  if (this->_internal_num_envs() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_envs());
  }

  // int32 num_environment_parameters = 7;
  if (this->_internal_num_environment_parameters() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_environment_parameters());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrainingEnvironmentInitialized::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrainingEnvironmentInitialized::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrainingEnvironmentInitialized::GetClassData() const { return &_class_data_; }


void TrainingEnvironmentInitialized::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrainingEnvironmentInitialized*>(&to_msg);
  auto& from = static_cast<const TrainingEnvironmentInitialized&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:communicator_objects.TrainingEnvironmentInitialized)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mlagents_version().empty()) {
    _this->_internal_set_mlagents_version(from._internal_mlagents_version());
  }
  if (!from._internal_ueagents_envs_version().empty()) {
    _this->_internal_set_ueagents_envs_version(from._internal_ueagents_envs_version());
  }
  if (!from._internal_python_version().empty()) {
    _this->_internal_set_python_version(from._internal_python_version());
  }
  if (!from._internal_torch_version().empty()) {
    _this->_internal_set_torch_version(from._internal_torch_version());
  }
  if (!from._internal_torch_device_type().empty()) {
    _this->_internal_set_torch_device_type(from._internal_torch_device_type());
  }
  if (!from._internal_run_options().empty()) {
    _this->_internal_set_run_options(from._internal_run_options());
  }
  if (from._internal_num_envs() != 0) {
    _this->_internal_set_num_envs(from._internal_num_envs());
  }
  if (from._internal_num_environment_parameters() != 0) {
    _this->_internal_set_num_environment_parameters(from._internal_num_environment_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrainingEnvironmentInitialized::CopyFrom(const TrainingEnvironmentInitialized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:communicator_objects.TrainingEnvironmentInitialized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingEnvironmentInitialized::IsInitialized() const {
  return true;
}

void TrainingEnvironmentInitialized::InternalSwap(TrainingEnvironmentInitialized* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mlagents_version_, lhs_arena,
                                       &other->_impl_.mlagents_version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ueagents_envs_version_, lhs_arena,
                                       &other->_impl_.ueagents_envs_version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.python_version_, lhs_arena,
                                       &other->_impl_.python_version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.torch_version_, lhs_arena,
                                       &other->_impl_.torch_version_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.torch_device_type_, lhs_arena,
                                       &other->_impl_.torch_device_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_options_, lhs_arena,
                                       &other->_impl_.run_options_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainingEnvironmentInitialized, _impl_.num_environment_parameters_)
      + sizeof(TrainingEnvironmentInitialized::_impl_.num_environment_parameters_)
      - PROTOBUF_FIELD_OFFSET(TrainingEnvironmentInitialized, _impl_.num_envs_)>(
          reinterpret_cast<char*>(&_impl_.num_envs_),
          reinterpret_cast<char*>(&other->_impl_.num_envs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainingEnvironmentInitialized::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_getter, &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_once,
      file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto[0]);
}
// ===================================================================

class TrainingBehaviorInitialized::_Internal {
 public:
};

TrainingBehaviorInitialized::TrainingBehaviorInitialized(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:communicator_objects.TrainingBehaviorInitialized)
}
TrainingBehaviorInitialized::TrainingBehaviorInitialized(const TrainingBehaviorInitialized& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TrainingBehaviorInitialized* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.behavior_name_) {}

    , decltype(_impl_.trainer_type_) {}

    , decltype(_impl_.visual_encoder_) {}

    , decltype(_impl_.config_) {}

    , decltype(_impl_.extrinsic_reward_enabled_) {}

    , decltype(_impl_.gail_reward_enabled_) {}

    , decltype(_impl_.curiosity_reward_enabled_) {}

    , decltype(_impl_.rnd_reward_enabled_) {}

    , decltype(_impl_.num_network_layers_) {}

    , decltype(_impl_.behavioral_cloning_enabled_) {}

    , decltype(_impl_.recurrent_enabled_) {}

    , decltype(_impl_.trainer_threaded_) {}

    , decltype(_impl_.self_play_enabled_) {}

    , decltype(_impl_.num_network_hidden_units_) {}

    , decltype(_impl_.curriculum_enabled_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.behavior_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.behavior_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_behavior_name().empty()) {
    _this->_impl_.behavior_name_.Set(from._internal_behavior_name(), _this->GetArenaForAllocation());
  }
  _impl_.trainer_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trainer_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trainer_type().empty()) {
    _this->_impl_.trainer_type_.Set(from._internal_trainer_type(), _this->GetArenaForAllocation());
  }
  _impl_.visual_encoder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.visual_encoder_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_visual_encoder().empty()) {
    _this->_impl_.visual_encoder_.Set(from._internal_visual_encoder(), _this->GetArenaForAllocation());
  }
  _impl_.config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config().empty()) {
    _this->_impl_.config_.Set(from._internal_config(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.extrinsic_reward_enabled_, &from._impl_.extrinsic_reward_enabled_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.curriculum_enabled_) -
    reinterpret_cast<char*>(&_impl_.extrinsic_reward_enabled_)) + sizeof(_impl_.curriculum_enabled_));
  // @@protoc_insertion_point(copy_constructor:communicator_objects.TrainingBehaviorInitialized)
}

inline void TrainingBehaviorInitialized::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.behavior_name_) {}

    , decltype(_impl_.trainer_type_) {}

    , decltype(_impl_.visual_encoder_) {}

    , decltype(_impl_.config_) {}

    , decltype(_impl_.extrinsic_reward_enabled_) { false }

    , decltype(_impl_.gail_reward_enabled_) { false }

    , decltype(_impl_.curiosity_reward_enabled_) { false }

    , decltype(_impl_.rnd_reward_enabled_) { false }

    , decltype(_impl_.num_network_layers_) { 0 }

    , decltype(_impl_.behavioral_cloning_enabled_) { false }

    , decltype(_impl_.recurrent_enabled_) { false }

    , decltype(_impl_.trainer_threaded_) { false }

    , decltype(_impl_.self_play_enabled_) { false }

    , decltype(_impl_.num_network_hidden_units_) { 0 }

    , decltype(_impl_.curriculum_enabled_) { false }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.behavior_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.behavior_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trainer_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trainer_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.visual_encoder_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.visual_encoder_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.config_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TrainingBehaviorInitialized::~TrainingBehaviorInitialized() {
  // @@protoc_insertion_point(destructor:communicator_objects.TrainingBehaviorInitialized)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TrainingBehaviorInitialized::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.behavior_name_.Destroy();
  _impl_.trainer_type_.Destroy();
  _impl_.visual_encoder_.Destroy();
  _impl_.config_.Destroy();
}

void TrainingBehaviorInitialized::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TrainingBehaviorInitialized::Clear() {
// @@protoc_insertion_point(message_clear_start:communicator_objects.TrainingBehaviorInitialized)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.behavior_name_.ClearToEmpty();
  _impl_.trainer_type_.ClearToEmpty();
  _impl_.visual_encoder_.ClearToEmpty();
  _impl_.config_.ClearToEmpty();
  ::memset(&_impl_.extrinsic_reward_enabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.curriculum_enabled_) -
      reinterpret_cast<char*>(&_impl_.extrinsic_reward_enabled_)) + sizeof(_impl_.curriculum_enabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrainingBehaviorInitialized::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string behavior_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_behavior_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingBehaviorInitialized.behavior_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string trainer_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trainer_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingBehaviorInitialized.trainer_type"));
        } else {
          goto handle_unusual;
        }
        continue;
      // bool extrinsic_reward_enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          #pragma warning(disable: 4800)
          _impl_.extrinsic_reward_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool gail_reward_enabled = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.gail_reward_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool curiosity_reward_enabled = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 40)) {
          _impl_.curiosity_reward_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool rnd_reward_enabled = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 48)) {
          _impl_.rnd_reward_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool behavioral_cloning_enabled = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 56)) {
          _impl_.behavioral_cloning_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool recurrent_enabled = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 64)) {
          _impl_.recurrent_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string visual_encoder = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_visual_encoder();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingBehaviorInitialized.visual_encoder"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 num_network_layers = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 80)) {
          _impl_.num_network_layers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 num_network_hidden_units = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 88)) {
          _impl_.num_network_hidden_units_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool trainer_threaded = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 96)) {
          _impl_.trainer_threaded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool self_play_enabled = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 104)) {
          _impl_.self_play_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // bool curriculum_enabled = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 112)) {
          _impl_.curriculum_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string config = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_config();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.TrainingBehaviorInitialized.config"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* TrainingBehaviorInitialized::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:communicator_objects.TrainingBehaviorInitialized)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string behavior_name = 1;
  if (!this->_internal_behavior_name().empty()) {
    const std::string& _s = this->_internal_behavior_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingBehaviorInitialized.behavior_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string trainer_type = 2;
  if (!this->_internal_trainer_type().empty()) {
    const std::string& _s = this->_internal_trainer_type();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingBehaviorInitialized.trainer_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool extrinsic_reward_enabled = 3;
  if (this->_internal_extrinsic_reward_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_extrinsic_reward_enabled(), target);
  }

  // bool gail_reward_enabled = 4;
  if (this->_internal_gail_reward_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_gail_reward_enabled(), target);
  }

  // bool curiosity_reward_enabled = 5;
  if (this->_internal_curiosity_reward_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_curiosity_reward_enabled(), target);
  }

  // bool rnd_reward_enabled = 6;
  if (this->_internal_rnd_reward_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_rnd_reward_enabled(), target);
  }

  // bool behavioral_cloning_enabled = 7;
  if (this->_internal_behavioral_cloning_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_behavioral_cloning_enabled(), target);
  }

  // bool recurrent_enabled = 8;
  if (this->_internal_recurrent_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_recurrent_enabled(), target);
  }

  // string visual_encoder = 9;
  if (!this->_internal_visual_encoder().empty()) {
    const std::string& _s = this->_internal_visual_encoder();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingBehaviorInitialized.visual_encoder");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // int32 num_network_layers = 10;
  if (this->_internal_num_network_layers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        10, this->_internal_num_network_layers(), target);
  }

  // int32 num_network_hidden_units = 11;
  if (this->_internal_num_network_hidden_units() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        11, this->_internal_num_network_hidden_units(), target);
  }

  // bool trainer_threaded = 12;
  if (this->_internal_trainer_threaded() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_trainer_threaded(), target);
  }

  // bool self_play_enabled = 13;
  if (this->_internal_self_play_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_self_play_enabled(), target);
  }

  // bool curriculum_enabled = 14;
  if (this->_internal_curriculum_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_curriculum_enabled(), target);
  }

  // string config = 15;
  if (!this->_internal_config().empty()) {
    const std::string& _s = this->_internal_config();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.TrainingBehaviorInitialized.config");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:communicator_objects.TrainingBehaviorInitialized)
  return target;
}

::size_t TrainingBehaviorInitialized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:communicator_objects.TrainingBehaviorInitialized)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string behavior_name = 1;
  if (!this->_internal_behavior_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_behavior_name());
  }

  // string trainer_type = 2;
  if (!this->_internal_trainer_type().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_trainer_type());
  }

  // string visual_encoder = 9;
  if (!this->_internal_visual_encoder().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_visual_encoder());
  }

  // string config = 15;
  if (!this->_internal_config().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_config());
  }

  // bool extrinsic_reward_enabled = 3;
  if (this->_internal_extrinsic_reward_enabled() != 0) {
    total_size += 2;
  }

  // bool gail_reward_enabled = 4;
  if (this->_internal_gail_reward_enabled() != 0) {
    total_size += 2;
  }

  // bool curiosity_reward_enabled = 5;
  if (this->_internal_curiosity_reward_enabled() != 0) {
    total_size += 2;
  }

  // bool rnd_reward_enabled = 6;
  if (this->_internal_rnd_reward_enabled() != 0) {
    total_size += 2;
  }

  // int32 num_network_layers = 10;
  if (this->_internal_num_network_layers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_network_layers());
  }

  // bool behavioral_cloning_enabled = 7;
  if (this->_internal_behavioral_cloning_enabled() != 0) {
    total_size += 2;
  }

  // bool recurrent_enabled = 8;
  if (this->_internal_recurrent_enabled() != 0) {
    total_size += 2;
  }

  // bool trainer_threaded = 12;
  if (this->_internal_trainer_threaded() != 0) {
    total_size += 2;
  }

  // bool self_play_enabled = 13;
  if (this->_internal_self_play_enabled() != 0) {
    total_size += 2;
  }

  // int32 num_network_hidden_units = 11;
  if (this->_internal_num_network_hidden_units() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_network_hidden_units());
  }

  // bool curriculum_enabled = 14;
  if (this->_internal_curriculum_enabled() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TrainingBehaviorInitialized::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TrainingBehaviorInitialized::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TrainingBehaviorInitialized::GetClassData() const { return &_class_data_; }


void TrainingBehaviorInitialized::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TrainingBehaviorInitialized*>(&to_msg);
  auto& from = static_cast<const TrainingBehaviorInitialized&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:communicator_objects.TrainingBehaviorInitialized)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_behavior_name().empty()) {
    _this->_internal_set_behavior_name(from._internal_behavior_name());
  }
  if (!from._internal_trainer_type().empty()) {
    _this->_internal_set_trainer_type(from._internal_trainer_type());
  }
  if (!from._internal_visual_encoder().empty()) {
    _this->_internal_set_visual_encoder(from._internal_visual_encoder());
  }
  if (!from._internal_config().empty()) {
    _this->_internal_set_config(from._internal_config());
  }
  if (from._internal_extrinsic_reward_enabled() != 0) {
    _this->_internal_set_extrinsic_reward_enabled(from._internal_extrinsic_reward_enabled());
  }
  if (from._internal_gail_reward_enabled() != 0) {
    _this->_internal_set_gail_reward_enabled(from._internal_gail_reward_enabled());
  }
  if (from._internal_curiosity_reward_enabled() != 0) {
    _this->_internal_set_curiosity_reward_enabled(from._internal_curiosity_reward_enabled());
  }
  if (from._internal_rnd_reward_enabled() != 0) {
    _this->_internal_set_rnd_reward_enabled(from._internal_rnd_reward_enabled());
  }
  if (from._internal_num_network_layers() != 0) {
    _this->_internal_set_num_network_layers(from._internal_num_network_layers());
  }
  if (from._internal_behavioral_cloning_enabled() != 0) {
    _this->_internal_set_behavioral_cloning_enabled(from._internal_behavioral_cloning_enabled());
  }
  if (from._internal_recurrent_enabled() != 0) {
    _this->_internal_set_recurrent_enabled(from._internal_recurrent_enabled());
  }
  if (from._internal_trainer_threaded() != 0) {
    _this->_internal_set_trainer_threaded(from._internal_trainer_threaded());
  }
  if (from._internal_self_play_enabled() != 0) {
    _this->_internal_set_self_play_enabled(from._internal_self_play_enabled());
  }
  if (from._internal_num_network_hidden_units() != 0) {
    _this->_internal_set_num_network_hidden_units(from._internal_num_network_hidden_units());
  }
  if (from._internal_curriculum_enabled() != 0) {
    _this->_internal_set_curriculum_enabled(from._internal_curriculum_enabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TrainingBehaviorInitialized::CopyFrom(const TrainingBehaviorInitialized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:communicator_objects.TrainingBehaviorInitialized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingBehaviorInitialized::IsInitialized() const {
  return true;
}

void TrainingBehaviorInitialized::InternalSwap(TrainingBehaviorInitialized* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.behavior_name_, lhs_arena,
                                       &other->_impl_.behavior_name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trainer_type_, lhs_arena,
                                       &other->_impl_.trainer_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.visual_encoder_, lhs_arena,
                                       &other->_impl_.visual_encoder_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.config_, lhs_arena,
                                       &other->_impl_.config_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainingBehaviorInitialized, _impl_.curriculum_enabled_)
      + sizeof(TrainingBehaviorInitialized::_impl_.curriculum_enabled_)
      - PROTOBUF_FIELD_OFFSET(TrainingBehaviorInitialized, _impl_.extrinsic_reward_enabled_)>(
          reinterpret_cast<char*>(&_impl_.extrinsic_reward_enabled_),
          reinterpret_cast<char*>(&other->_impl_.extrinsic_reward_enabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrainingBehaviorInitialized::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_getter, &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto_once,
      file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2ftraining_5fanalytics_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace communicator_objects
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::communicator_objects::TrainingEnvironmentInitialized*
Arena::CreateMaybeMessage< ::communicator_objects::TrainingEnvironmentInitialized >(Arena* arena) {
  return Arena::CreateMessageInternal< ::communicator_objects::TrainingEnvironmentInitialized >(arena);
}
template<> PROTOBUF_NOINLINE ::communicator_objects::TrainingBehaviorInitialized*
Arena::CreateMaybeMessage< ::communicator_objects::TrainingBehaviorInitialized >(Arena* arena) {
  return Arena::CreateMessageInternal< ::communicator_objects::TrainingBehaviorInitialized >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
