// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ueagents_envs/communicator_objects/demonstration_meta.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto;
namespace communicator_objects {
class DemonstrationMetaProto;
struct DemonstrationMetaProtoDefaultTypeInternal;
extern DemonstrationMetaProtoDefaultTypeInternal _DemonstrationMetaProto_default_instance_;
}  // namespace communicator_objects
PROTOBUF_NAMESPACE_OPEN
template <>
::communicator_objects::DemonstrationMetaProto* Arena::CreateMaybeMessage<::communicator_objects::DemonstrationMetaProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace communicator_objects {

// ===================================================================


// -------------------------------------------------------------------

class DemonstrationMetaProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:communicator_objects.DemonstrationMetaProto) */ {
 public:
  inline DemonstrationMetaProto() : DemonstrationMetaProto(nullptr) {}
  ~DemonstrationMetaProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DemonstrationMetaProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DemonstrationMetaProto(const DemonstrationMetaProto& from);
  DemonstrationMetaProto(DemonstrationMetaProto&& from) noexcept
    : DemonstrationMetaProto() {
    *this = ::std::move(from);
  }

  inline DemonstrationMetaProto& operator=(const DemonstrationMetaProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DemonstrationMetaProto& operator=(DemonstrationMetaProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DemonstrationMetaProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const DemonstrationMetaProto* internal_default_instance() {
    return reinterpret_cast<const DemonstrationMetaProto*>(
               &_DemonstrationMetaProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DemonstrationMetaProto& a, DemonstrationMetaProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DemonstrationMetaProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DemonstrationMetaProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DemonstrationMetaProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DemonstrationMetaProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DemonstrationMetaProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DemonstrationMetaProto& from) {
    DemonstrationMetaProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DemonstrationMetaProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "communicator_objects.DemonstrationMetaProto";
  }
  protected:
  explicit DemonstrationMetaProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDemonstrationNameFieldNumber = 2,
    kApiVersionFieldNumber = 1,
    kNumberStepsFieldNumber = 3,
    kNumberEpisodesFieldNumber = 4,
    kMeanRewardFieldNumber = 5,
  };
  // string demonstration_name = 2;
  void clear_demonstration_name() ;
  const std::string& demonstration_name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_demonstration_name(Arg_&& arg, Args_... args);
  std::string* mutable_demonstration_name();
  PROTOBUF_NODISCARD std::string* release_demonstration_name();
  void set_allocated_demonstration_name(std::string* ptr);

  private:
  const std::string& _internal_demonstration_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_demonstration_name(
      const std::string& value);
  std::string* _internal_mutable_demonstration_name();

  public:
  // int32 api_version = 1;
  void clear_api_version() ;
  ::int32_t api_version() const;
  void set_api_version(::int32_t value);

  private:
  ::int32_t _internal_api_version() const;
  void _internal_set_api_version(::int32_t value);

  public:
  // int32 number_steps = 3;
  void clear_number_steps() ;
  ::int32_t number_steps() const;
  void set_number_steps(::int32_t value);

  private:
  ::int32_t _internal_number_steps() const;
  void _internal_set_number_steps(::int32_t value);

  public:
  // int32 number_episodes = 4;
  void clear_number_episodes() ;
  ::int32_t number_episodes() const;
  void set_number_episodes(::int32_t value);

  private:
  ::int32_t _internal_number_episodes() const;
  void _internal_set_number_episodes(::int32_t value);

  public:
  // float mean_reward = 5;
  void clear_mean_reward() ;
  float mean_reward() const;
  void set_mean_reward(float value);

  private:
  float _internal_mean_reward() const;
  void _internal_set_mean_reward(float value);

  public:
  // @@protoc_insertion_point(class_scope:communicator_objects.DemonstrationMetaProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr demonstration_name_;
    ::int32_t api_version_;
    ::int32_t number_steps_;
    ::int32_t number_episodes_;
    float mean_reward_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DemonstrationMetaProto

// int32 api_version = 1;
inline void DemonstrationMetaProto::clear_api_version() {
  _impl_.api_version_ = 0;
}
inline ::int32_t DemonstrationMetaProto::api_version() const {
  // @@protoc_insertion_point(field_get:communicator_objects.DemonstrationMetaProto.api_version)
  return _internal_api_version();
}
inline void DemonstrationMetaProto::set_api_version(::int32_t value) {
  _internal_set_api_version(value);
  // @@protoc_insertion_point(field_set:communicator_objects.DemonstrationMetaProto.api_version)
}
inline ::int32_t DemonstrationMetaProto::_internal_api_version() const {
  return _impl_.api_version_;
}
inline void DemonstrationMetaProto::_internal_set_api_version(::int32_t value) {
  ;
  _impl_.api_version_ = value;
}

// string demonstration_name = 2;
inline void DemonstrationMetaProto::clear_demonstration_name() {
  _impl_.demonstration_name_.ClearToEmpty();
}
inline const std::string& DemonstrationMetaProto::demonstration_name() const {
  // @@protoc_insertion_point(field_get:communicator_objects.DemonstrationMetaProto.demonstration_name)
  return _internal_demonstration_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DemonstrationMetaProto::set_demonstration_name(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.demonstration_name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:communicator_objects.DemonstrationMetaProto.demonstration_name)
}
inline std::string* DemonstrationMetaProto::mutable_demonstration_name() {
  std::string* _s = _internal_mutable_demonstration_name();
  // @@protoc_insertion_point(field_mutable:communicator_objects.DemonstrationMetaProto.demonstration_name)
  return _s;
}
inline const std::string& DemonstrationMetaProto::_internal_demonstration_name() const {
  return _impl_.demonstration_name_.Get();
}
inline void DemonstrationMetaProto::_internal_set_demonstration_name(const std::string& value) {
  ;


  _impl_.demonstration_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DemonstrationMetaProto::_internal_mutable_demonstration_name() {
  ;
  return _impl_.demonstration_name_.Mutable( GetArenaForAllocation());
}
inline std::string* DemonstrationMetaProto::release_demonstration_name() {
  // @@protoc_insertion_point(field_release:communicator_objects.DemonstrationMetaProto.demonstration_name)
  return _impl_.demonstration_name_.Release();
}
inline void DemonstrationMetaProto::set_allocated_demonstration_name(std::string* value) {
  _impl_.demonstration_name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.demonstration_name_.IsDefault()) {
          _impl_.demonstration_name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:communicator_objects.DemonstrationMetaProto.demonstration_name)
}

// int32 number_steps = 3;
inline void DemonstrationMetaProto::clear_number_steps() {
  _impl_.number_steps_ = 0;
}
inline ::int32_t DemonstrationMetaProto::number_steps() const {
  // @@protoc_insertion_point(field_get:communicator_objects.DemonstrationMetaProto.number_steps)
  return _internal_number_steps();
}
inline void DemonstrationMetaProto::set_number_steps(::int32_t value) {
  _internal_set_number_steps(value);
  // @@protoc_insertion_point(field_set:communicator_objects.DemonstrationMetaProto.number_steps)
}
inline ::int32_t DemonstrationMetaProto::_internal_number_steps() const {
  return _impl_.number_steps_;
}
inline void DemonstrationMetaProto::_internal_set_number_steps(::int32_t value) {
  ;
  _impl_.number_steps_ = value;
}

// int32 number_episodes = 4;
inline void DemonstrationMetaProto::clear_number_episodes() {
  _impl_.number_episodes_ = 0;
}
inline ::int32_t DemonstrationMetaProto::number_episodes() const {
  // @@protoc_insertion_point(field_get:communicator_objects.DemonstrationMetaProto.number_episodes)
  return _internal_number_episodes();
}
inline void DemonstrationMetaProto::set_number_episodes(::int32_t value) {
  _internal_set_number_episodes(value);
  // @@protoc_insertion_point(field_set:communicator_objects.DemonstrationMetaProto.number_episodes)
}
inline ::int32_t DemonstrationMetaProto::_internal_number_episodes() const {
  return _impl_.number_episodes_;
}
inline void DemonstrationMetaProto::_internal_set_number_episodes(::int32_t value) {
  ;
  _impl_.number_episodes_ = value;
}

// float mean_reward = 5;
inline void DemonstrationMetaProto::clear_mean_reward() {
  _impl_.mean_reward_ = 0;
}
inline float DemonstrationMetaProto::mean_reward() const {
  // @@protoc_insertion_point(field_get:communicator_objects.DemonstrationMetaProto.mean_reward)
  return _internal_mean_reward();
}
inline void DemonstrationMetaProto::set_mean_reward(float value) {
  _internal_set_mean_reward(value);
  // @@protoc_insertion_point(field_set:communicator_objects.DemonstrationMetaProto.mean_reward)
}
inline float DemonstrationMetaProto::_internal_mean_reward() const {
  return _impl_.mean_reward_;
}
inline void DemonstrationMetaProto::_internal_set_mean_reward(float value) {
  ;
  _impl_.mean_reward_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace communicator_objects


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_2epb_2eh
