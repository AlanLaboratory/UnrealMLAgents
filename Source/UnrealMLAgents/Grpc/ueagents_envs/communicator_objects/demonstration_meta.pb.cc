// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ueagents_envs/communicator_objects/demonstration_meta.proto

#include "ueagents_envs/communicator_objects/demonstration_meta.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace communicator_objects {
template <typename>
PROTOBUF_CONSTEXPR DemonstrationMetaProto::DemonstrationMetaProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.demonstration_name_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.api_version_)*/ 0

  , /*decltype(_impl_.number_steps_)*/ 0

  , /*decltype(_impl_.number_episodes_)*/ 0

  , /*decltype(_impl_.mean_reward_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DemonstrationMetaProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DemonstrationMetaProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DemonstrationMetaProtoDefaultTypeInternal() {}
  union {
    DemonstrationMetaProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DemonstrationMetaProtoDefaultTypeInternal _DemonstrationMetaProto_default_instance_;
}  // namespace communicator_objects
static ::_pb::Metadata file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto = nullptr;
const ::uint32_t TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _impl_.api_version_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _impl_.demonstration_name_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _impl_.number_steps_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _impl_.number_episodes_),
    PROTOBUF_FIELD_OFFSET(::communicator_objects::DemonstrationMetaProto, _impl_.mean_reward_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::communicator_objects::DemonstrationMetaProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::communicator_objects::_DemonstrationMetaProto_default_instance_._instance,
};
const char descriptor_table_protodef_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n;ueagents_envs/communicator_objects/dem"
    "onstration_meta.proto\022\024communicator_obje"
    "cts\"\215\001\n\026DemonstrationMetaProto\022\023\n\013api_ve"
    "rsion\030\001 \001(\005\022\032\n\022demonstration_name\030\002 \001(\t\022"
    "\024\n\014number_steps\030\003 \001(\005\022\027\n\017number_episodes"
    "\030\004 \001(\005\022\023\n\013mean_reward\030\005 \001(\002b\006proto3"
};
static ::absl::once_flag descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto = {
    false,
    false,
    235,
    descriptor_table_protodef_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto,
    "ueagents_envs/communicator_objects/demonstration_meta.proto",
    &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto::offsets,
    file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto,
    file_level_enum_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto,
    file_level_service_descriptors_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_getter() {
  return &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto(&descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto);
namespace communicator_objects {
// ===================================================================

class DemonstrationMetaProto::_Internal {
 public:
};

DemonstrationMetaProto::DemonstrationMetaProto(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:communicator_objects.DemonstrationMetaProto)
}
DemonstrationMetaProto::DemonstrationMetaProto(const DemonstrationMetaProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DemonstrationMetaProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.demonstration_name_) {}

    , decltype(_impl_.api_version_) {}

    , decltype(_impl_.number_steps_) {}

    , decltype(_impl_.number_episodes_) {}

    , decltype(_impl_.mean_reward_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.demonstration_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demonstration_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_demonstration_name().empty()) {
    _this->_impl_.demonstration_name_.Set(from._internal_demonstration_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.api_version_, &from._impl_.api_version_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.mean_reward_) -
    reinterpret_cast<char*>(&_impl_.api_version_)) + sizeof(_impl_.mean_reward_));
  // @@protoc_insertion_point(copy_constructor:communicator_objects.DemonstrationMetaProto)
}

inline void DemonstrationMetaProto::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.demonstration_name_) {}

    , decltype(_impl_.api_version_) { 0 }

    , decltype(_impl_.number_steps_) { 0 }

    , decltype(_impl_.number_episodes_) { 0 }

    , decltype(_impl_.mean_reward_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.demonstration_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.demonstration_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DemonstrationMetaProto::~DemonstrationMetaProto() {
  // @@protoc_insertion_point(destructor:communicator_objects.DemonstrationMetaProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DemonstrationMetaProto::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.demonstration_name_.Destroy();
}

void DemonstrationMetaProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DemonstrationMetaProto::Clear() {
// @@protoc_insertion_point(message_clear_start:communicator_objects.DemonstrationMetaProto)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.demonstration_name_.ClearToEmpty();
  ::memset(&_impl_.api_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mean_reward_) -
      reinterpret_cast<char*>(&_impl_.api_version_)) + sizeof(_impl_.mean_reward_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DemonstrationMetaProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.api_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string demonstration_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_demonstration_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "communicator_objects.DemonstrationMetaProto.demonstration_name"));
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 number_steps = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          _impl_.number_steps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // int32 number_episodes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.number_episodes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // float mean_reward = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 45)) {
          _impl_.mean_reward_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* DemonstrationMetaProto::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:communicator_objects.DemonstrationMetaProto)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 api_version = 1;
  if (this->_internal_api_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_api_version(), target);
  }

  // string demonstration_name = 2;
  if (!this->_internal_demonstration_name().empty()) {
    const std::string& _s = this->_internal_demonstration_name();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "communicator_objects.DemonstrationMetaProto.demonstration_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 number_steps = 3;
  if (this->_internal_number_steps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_number_steps(), target);
  }

  // int32 number_episodes = 4;
  if (this->_internal_number_episodes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        4, this->_internal_number_episodes(), target);
  }

  // float mean_reward = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_mean_reward = this->_internal_mean_reward();
  ::uint32_t raw_mean_reward;
  memcpy(&raw_mean_reward, &tmp_mean_reward, sizeof(tmp_mean_reward));
  if (raw_mean_reward != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_mean_reward(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:communicator_objects.DemonstrationMetaProto)
  return target;
}

::size_t DemonstrationMetaProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:communicator_objects.DemonstrationMetaProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string demonstration_name = 2;
  if (!this->_internal_demonstration_name().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_demonstration_name());
  }

  // int32 api_version = 1;
  if (this->_internal_api_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_api_version());
  }

  // int32 number_steps = 3;
  if (this->_internal_number_steps() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_number_steps());
  }

  // int32 number_episodes = 4;
  if (this->_internal_number_episodes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_number_episodes());
  }

  // float mean_reward = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_mean_reward = this->_internal_mean_reward();
  ::uint32_t raw_mean_reward;
  memcpy(&raw_mean_reward, &tmp_mean_reward, sizeof(tmp_mean_reward));
  if (raw_mean_reward != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DemonstrationMetaProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DemonstrationMetaProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DemonstrationMetaProto::GetClassData() const { return &_class_data_; }


void DemonstrationMetaProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DemonstrationMetaProto*>(&to_msg);
  auto& from = static_cast<const DemonstrationMetaProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:communicator_objects.DemonstrationMetaProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_demonstration_name().empty()) {
    _this->_internal_set_demonstration_name(from._internal_demonstration_name());
  }
  if (from._internal_api_version() != 0) {
    _this->_internal_set_api_version(from._internal_api_version());
  }
  if (from._internal_number_steps() != 0) {
    _this->_internal_set_number_steps(from._internal_number_steps());
  }
  if (from._internal_number_episodes() != 0) {
    _this->_internal_set_number_episodes(from._internal_number_episodes());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float), "Code assumes ::uint32_t and float are the same size.");
  float tmp_mean_reward = from._internal_mean_reward();
  ::uint32_t raw_mean_reward;
  memcpy(&raw_mean_reward, &tmp_mean_reward, sizeof(tmp_mean_reward));
  if (raw_mean_reward != 0) {
    _this->_internal_set_mean_reward(from._internal_mean_reward());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DemonstrationMetaProto::CopyFrom(const DemonstrationMetaProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:communicator_objects.DemonstrationMetaProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DemonstrationMetaProto::IsInitialized() const {
  return true;
}

void DemonstrationMetaProto::InternalSwap(DemonstrationMetaProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.demonstration_name_, lhs_arena,
                                       &other->_impl_.demonstration_name_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DemonstrationMetaProto, _impl_.mean_reward_)
      + sizeof(DemonstrationMetaProto::_impl_.mean_reward_)
      - PROTOBUF_FIELD_OFFSET(DemonstrationMetaProto, _impl_.api_version_)>(
          reinterpret_cast<char*>(&_impl_.api_version_),
          reinterpret_cast<char*>(&other->_impl_.api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DemonstrationMetaProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_getter, &descriptor_table_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto_once,
      file_level_metadata_ueagents_5fenvs_2fcommunicator_5fobjects_2fdemonstration_5fmeta_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace communicator_objects
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::communicator_objects::DemonstrationMetaProto*
Arena::CreateMaybeMessage< ::communicator_objects::DemonstrationMetaProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::communicator_objects::DemonstrationMetaProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
